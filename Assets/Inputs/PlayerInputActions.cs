//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Inputs/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""729859dd-4dc9-4c7c-979a-0464f4b9e35b"",
            ""actions"": [
                {
                    ""name"": ""Camera_Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""09f9ad30-8e4d-4429-96e5-778e1ade0f44"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera_Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""06966147-f595-42de-9c6a-c5a0fa4e5760"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera_Rotate_Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""9c3582f8-a333-42d7-be52-0ddb8e29cfe6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera_Move"",
                    ""type"": ""Value"",
                    ""id"": ""41452ddc-b3fa-452b-92f4-4de6c44c2aa9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cancel_Building"",
                    ""type"": ""Button"",
                    ""id"": ""e2802db6-ff69-4b9e-966b-e5bed8b52f63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlaceDelete_Building"",
                    ""type"": ""Button"",
                    ""id"": ""0ecb6271-f06a-4311-b72e-d4a8b3129950"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate_Building"",
                    ""type"": ""Button"",
                    ""id"": ""283f2d2a-9e61-4b27-9d38-68627a8c552b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c3d62d05-8f62-45b1-8816-171f0f6d51ac"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2,InvertVector2(invertX=false)"",
                    ""groups"": """",
                    ""action"": ""Camera_Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3440f7da-4794-4215-85c8-18ea0c7d8f2f"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74836384-d1d0-44e4-91bd-9803bbb8d819"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Rotate_Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""b13cea0d-e09d-4944-a029-61f97226e7db"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""970e38c6-5412-4eeb-9d7f-052740bdcde5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c6681f8b-5516-4f26-b9c5-4edce8c32934"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""826ce407-20f0-48dc-8218-d11fc0bcd589"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2531ee72-3516-4a55-a48a-03d798a1fa75"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""d990b63b-8b28-4b8c-a26b-276d556e56df"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""69bc41c4-5de4-4bbe-a00a-126f8b422408"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9fcb90b8-f496-48c2-81ca-b6673235eeba"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""86e7642b-d0b8-41a0-9e98-d0fcb9931f4f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cd731567-2d04-4515-8389-ea450d076537"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e6852b41-bdae-4648-b463-5b0cc3c2c76e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel_Building"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08dfac1e-04f0-4df1-b4a9-8b51a6588c4b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlaceDelete_Building"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e323001-e28f-4858-9518-59467836b91a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate_Building"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Camera_Zoom = m_Player.FindAction("Camera_Zoom", throwIfNotFound: true);
        m_Player_Camera_Rotate = m_Player.FindAction("Camera_Rotate", throwIfNotFound: true);
        m_Player_Camera_Rotate_Toggle = m_Player.FindAction("Camera_Rotate_Toggle", throwIfNotFound: true);
        m_Player_Camera_Move = m_Player.FindAction("Camera_Move", throwIfNotFound: true);
        m_Player_Cancel_Building = m_Player.FindAction("Cancel_Building", throwIfNotFound: true);
        m_Player_PlaceDelete_Building = m_Player.FindAction("PlaceDelete_Building", throwIfNotFound: true);
        m_Player_Rotate_Building = m_Player.FindAction("Rotate_Building", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Camera_Zoom;
    private readonly InputAction m_Player_Camera_Rotate;
    private readonly InputAction m_Player_Camera_Rotate_Toggle;
    private readonly InputAction m_Player_Camera_Move;
    private readonly InputAction m_Player_Cancel_Building;
    private readonly InputAction m_Player_PlaceDelete_Building;
    private readonly InputAction m_Player_Rotate_Building;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Camera_Zoom => m_Wrapper.m_Player_Camera_Zoom;
        public InputAction @Camera_Rotate => m_Wrapper.m_Player_Camera_Rotate;
        public InputAction @Camera_Rotate_Toggle => m_Wrapper.m_Player_Camera_Rotate_Toggle;
        public InputAction @Camera_Move => m_Wrapper.m_Player_Camera_Move;
        public InputAction @Cancel_Building => m_Wrapper.m_Player_Cancel_Building;
        public InputAction @PlaceDelete_Building => m_Wrapper.m_Player_PlaceDelete_Building;
        public InputAction @Rotate_Building => m_Wrapper.m_Player_Rotate_Building;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Camera_Zoom.started += instance.OnCamera_Zoom;
            @Camera_Zoom.performed += instance.OnCamera_Zoom;
            @Camera_Zoom.canceled += instance.OnCamera_Zoom;
            @Camera_Rotate.started += instance.OnCamera_Rotate;
            @Camera_Rotate.performed += instance.OnCamera_Rotate;
            @Camera_Rotate.canceled += instance.OnCamera_Rotate;
            @Camera_Rotate_Toggle.started += instance.OnCamera_Rotate_Toggle;
            @Camera_Rotate_Toggle.performed += instance.OnCamera_Rotate_Toggle;
            @Camera_Rotate_Toggle.canceled += instance.OnCamera_Rotate_Toggle;
            @Camera_Move.started += instance.OnCamera_Move;
            @Camera_Move.performed += instance.OnCamera_Move;
            @Camera_Move.canceled += instance.OnCamera_Move;
            @Cancel_Building.started += instance.OnCancel_Building;
            @Cancel_Building.performed += instance.OnCancel_Building;
            @Cancel_Building.canceled += instance.OnCancel_Building;
            @PlaceDelete_Building.started += instance.OnPlaceDelete_Building;
            @PlaceDelete_Building.performed += instance.OnPlaceDelete_Building;
            @PlaceDelete_Building.canceled += instance.OnPlaceDelete_Building;
            @Rotate_Building.started += instance.OnRotate_Building;
            @Rotate_Building.performed += instance.OnRotate_Building;
            @Rotate_Building.canceled += instance.OnRotate_Building;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Camera_Zoom.started -= instance.OnCamera_Zoom;
            @Camera_Zoom.performed -= instance.OnCamera_Zoom;
            @Camera_Zoom.canceled -= instance.OnCamera_Zoom;
            @Camera_Rotate.started -= instance.OnCamera_Rotate;
            @Camera_Rotate.performed -= instance.OnCamera_Rotate;
            @Camera_Rotate.canceled -= instance.OnCamera_Rotate;
            @Camera_Rotate_Toggle.started -= instance.OnCamera_Rotate_Toggle;
            @Camera_Rotate_Toggle.performed -= instance.OnCamera_Rotate_Toggle;
            @Camera_Rotate_Toggle.canceled -= instance.OnCamera_Rotate_Toggle;
            @Camera_Move.started -= instance.OnCamera_Move;
            @Camera_Move.performed -= instance.OnCamera_Move;
            @Camera_Move.canceled -= instance.OnCamera_Move;
            @Cancel_Building.started -= instance.OnCancel_Building;
            @Cancel_Building.performed -= instance.OnCancel_Building;
            @Cancel_Building.canceled -= instance.OnCancel_Building;
            @PlaceDelete_Building.started -= instance.OnPlaceDelete_Building;
            @PlaceDelete_Building.performed -= instance.OnPlaceDelete_Building;
            @PlaceDelete_Building.canceled -= instance.OnPlaceDelete_Building;
            @Rotate_Building.started -= instance.OnRotate_Building;
            @Rotate_Building.performed -= instance.OnRotate_Building;
            @Rotate_Building.canceled -= instance.OnRotate_Building;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnCamera_Zoom(InputAction.CallbackContext context);
        void OnCamera_Rotate(InputAction.CallbackContext context);
        void OnCamera_Rotate_Toggle(InputAction.CallbackContext context);
        void OnCamera_Move(InputAction.CallbackContext context);
        void OnCancel_Building(InputAction.CallbackContext context);
        void OnPlaceDelete_Building(InputAction.CallbackContext context);
        void OnRotate_Building(InputAction.CallbackContext context);
    }
}
